const List = require("./list.js");

exports.copy = (obj) =>
	Object.assign({}, obj);

exports.get = (key) => (obj) =>
	obj[key];

exports.set = (key, val) => (obj) =>
	(obj[key] = val, obj);

exports.eq = (key, val) => (obj) =>
	obj[key] === val;

exports.forwardFrom = (inObj) => (outObj, key) =>
	exports.set(key, inObj[key])(outObj);

exports.forward = (props) => (inObj, outObj) =>
	props.reduce(exports.forwardFrom(inObj), outObj);

exports.save = function (obj) {
	const copy = exports.copy(obj);
	return () => Object.assign(obj, copy);
};

exports.saveList = function (objs) {
	const list = objs.map(exports.save);
	return () => List.exec(list);
};
