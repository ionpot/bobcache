const Stream = require("stream");
const Func = require("./func.js");

exports.read = (src) =>
	new Promise(function (done, fail) {
		let str = "";
		src.on("data", chunk => str += chunk);
		src.on("end", () => done(str));
		src.on("error", fail);
	});

const makeR = (each) =>
	new Stream.Readable({
		read() {
			each(x => this.push(x));
			this.push(null);
		}
	});

exports.emptyReadable = () =>
	makeR(Func.empty);

exports.readableWith = (str) =>
	makeR(Func.map(str));

const makeW = (each, done) =>
	new Stream.Writable({
		decodeStrings: false,
		write(chunk, encoding, next) {
			each(chunk);
			next();
		}
	}).on("finish", done);

exports.writableBuffered = function (done) {
	let str = "";
	return makeW(
		chunk => str += chunk,
		() => done(str)
	);
};
